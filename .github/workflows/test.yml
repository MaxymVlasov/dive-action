name: build
on:  # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:  # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - run: npm install
      - run: npm run all

  test:  # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    env:
      SUCCESS_IMAGE: ghcr.io/joschi/dive:latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Pre-setup
        id: pre-setup
        run: |
          # Verify test image existence
          docker pull ${{ env.SUCCESS_IMAGE }} || {
            echo "Test image ${{ env.SUCCESS_IMAGE }} not found" >&2
            exit 1
          }

      - name: 'Params: required only with no defaults'
        if: always() && steps.pre-setup.outcome == 'success'
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}

      - name: 'Params: config-file'
        if: always() && steps.pre-setup.outcome == 'success'
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}
          config-file: ${{ github.workspace }}/.github/.dive-ci.yaml

      - name: 'Params: github-token'
        if: always() && steps.pre-setup.outcome == 'success'
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Params: dive-image-registry, dive-image-version'
        if: always() && steps.pre-setup.outcome == 'success'
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}
          dive-image-registry: ghcr.io/joschi/dive
          dive-image-version: >-
            0.14.0

      # Verifies that the action properly handles and reports errors
      # when trying to analyze a non-existent Docker image
      - name: 'Negative test: Invalid image name'
        if: always() && steps.pre-setup.outcome == 'success'
        continue-on-error: true
        uses: ./
        with:
          image: invalid/image:latest
      # Tests error handling when the specified dive configuration file doesn't exist
      - name: 'Negative test: Non-existent config file'
        if: always() && steps.pre-setup.outcome == 'success'
        continue-on-error: true
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}
          config-file: /non/existent/path.yaml
      # Ensures proper error reporting when an unsupported container
      # runtime (not docker/podman) is specified
      - name: 'Negative test: Invalid image source'
        if: always() && steps.pre-setup.outcome == 'success'
        continue-on-error: true
        uses: ./
        with:
          image: ${{ env.SUCCESS_IMAGE }}
          image-source: invalid-source
      # Validates that the action correctly enforces the required image
      # input parameter
      - name: 'Negative test: Missing required image parameter'
        if: always() && steps.pre-setup.outcome == 'success'
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
